#!/usr/bin/env ruby

require_relative "../lib/rcat"

def parse_options(argv)
  opts = {}
  files = OptionParser.new do |parser|

    parser.on("-n", "Print line numbers for every line") {
      opts[:number_lines] = true
    }

    parser.on("-b", "Print line numbers for all except blank lines") {
      opts[:number_lines] = true
      opts[:significant_lines] = true
    }

    parser.on("-s", "Ignore multiple blank lines") {
      opts[:squeeze_multi_blank] = true
    }
  end.parse(argv)

  [opts, files]
rescue OptionParser::InvalidOption => err
  abort "rcat: #{err.message}\nusage: rcat [-bns] [file ...]"
end

begin
  opts, files = parse_options(ARGV)
  display = RCat::Display.new(opts)
  display.enable_numbering             if  opts[:number_lines]
  display.enable_significant_numbering if  opts[:significant_lines]
  display.enable_squeeze               if  opts[:squeeze_multi_blank]

  if files.empty?
    display.render(STDIN)
  else
    files.each do |filename|
      File.open(filename) { |f| display.render(f) }
    end
  end
rescue Errno::ENOENT => err
  abort "rcat: #{err.message}"
end

